- name: Setup Environment
  hosts: bluesky-bridge
  tasks:
    - name: Add service user
      ansible.builtin.user:
        name: '{{ service_name }}'
    - name: Install node
      ansible.builtin.apt:
        name: nodejs
        state: present
    - name: Install npm
      ansible.builtin.apt:
        name: npm
        state: present
    - name: Set service credentials facts
      ansible.builtin.set_fact:
        service_credentials: |
          BLUESKY_HANDLE={{ bluesky_handle }}
          BLUESKY_PASSWORD={{ bluesky_password }}

          ACTION_USERNAME={{ action_username }}
          ACTION_PASSWORD_HASH={{ action_password | password_hash('bcrypt') }}

          OAUTH_CLIENT_ID={{ oauth_client_id }}
          OAUTH_CLIENT_SECRET_HASH={{ oauth_client_secret | password_hash('bcrypt') }}
          OAUTH_REDIRECT_URI={{ oauth_redirect_uri }}
          TOKEN_ISSUER={{ inventory_hostname }}
        service_credentials_path: /home/{{ service_name }}/{{ service_name }}-creds.cred
      no_log: true
    - name: Set service credentials fact hashs
      ansible.builtin.set_fact:
        service_credentials_hash: "{{ service_credentials | hash('sha256') }}"
    - name: Encrypt service credentials
      ansible.builtin.shell:
        cmd: |
          systemd-creds encrypt --name={{ service_name }}-creds - {{ service_credentials_path }};
          rm {{ service_credentials_path }}-hash.*;
          touch {{ service_credentials_path }}-hash.{{ service_credentials | hash('sha256') }};
        stdin: |
          BLUESKY_HANDLE={{ bluesky_handle }}
          BLUESKY_PASSWORD={{ service_password }}
        creates: "{{ service_credentials_path }}-hash.{{ service_credentials | hash('sha256') }}"
      no_log: true
    - name: Setup service
      ansible.builtin.template:
        src: ./service.template
        dest: /etc/systemd/system/{{ service_name }}.service
        mode: '0444'
    - name: Copy Project
      ansible.posix.synchronize:
        src: ../../
        dest: /opt/{{ service_name }}/
        owner: false
        group: false
        delete: true
    - name: Restart service
      ansible.builtin.service:
        name: '{{ service_name }}'
        enabled: yes
        daemon_reload: true
        state: restarted
    - name: Install caddy
      ansible.builtin.apt:
        name: caddy
        state: present
    - name: Setup Caddy
      ansible.builtin.template:
        src: ./Caddyfile
        dest: /etc/caddy/Caddyfile
        mode: '0444'
    - name: Reload caddy
      ansible.builtin.service:
        name: caddy
        enabled: yes
        state: reloaded
